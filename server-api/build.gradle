plugins {
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

processResources.dependsOn('copySecret')

tasks.register('copySecret', Copy) {
    from '../Config/server-api/'
    include "application*.yml"  // 복사할 파일들
    into 'src/main/resources'  // 복사 위치
}

configurations {
    asciidoctorExtensions // dependencies 에서 적용한 것 추가
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    // 컴파일시 가져올 모듈
    implementation project(":server-domain")
    implementation project(":server-common")
    implementation project(":server-infra")

    // spring
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    //jwt
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // junit
    testImplementation 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.junit.jupiter:junit-jupiter-params'

    // asciidoctor
    asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'

    // lombok test
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // Spring Rest Docs 관련 추가
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    // h2 db
    runtimeOnly 'com.h2database:h2'

    //test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'com.h2database:h2'
    testImplementation group: 'org.springframework.security', name: 'spring-security-test', version: '6.2.1'

    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // retry
    implementation 'org.springframework.retry:spring-retry:1.2.5.RELEASE'

    // http resttemplate
    implementation 'org.apache.httpcomponents:httpcore:4.4.15'
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
}

ext {
    // 아래서 사용할 변수 선언
    snippetsDir = file('build/generated-snippets')
}


test {
    // 위에서 작성한 snippetsDir 디렉토리를 test의 output으로 구성하는 설정 -> 스니펫 조각들이 build/generated-snippets로 출력
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor{ //asciidoctor 설정 task
    inputs.dir snippetsDir //snippets 디렉토리를 입력으로 함
    configurations 'asciidoctorExtensions' // 위에서 작성한 configuration 적용

    dependsOn test // test task를 의존하도록 하여, 문서 생성 전에 test를 수행하도록 함
}

bootJar{ //springboot를 이용한 jar 파일 생성 시 필요한 설정 task
    dependsOn asciidoctor //asciidoctor 를 의존하도록 하여, bootJar 생성 전에 asciidoctor task를 수행하도록 함
    // (jar 파일 생성 시, 문서 생성을 보장 함)
    from("build/docs/asciidoc"){ //문서 생성 시, Jar 파일 내 static/docs 에도 복사되도록 함
        into 'BOOT-INF/classes/static/docs'
    }
}
